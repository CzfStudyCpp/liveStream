// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: user.proto
#ifndef GRPC_user_2eproto__INCLUDED
#define GRPC_user_2eproto__INCLUDED

#include "user.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace user {

// UserService 服务定义
class UserService final {
 public:
  static constexpr char const* service_full_name() {
    return "user.UserService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 查询用户信息
    virtual ::grpc::Status QueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::user::QueryUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::QueryUserResponse>> AsyncQueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::QueryUserResponse>>(AsyncQueryUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::QueryUserResponse>> PrepareAsyncQueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::QueryUserResponse>>(PrepareAsyncQueryUserRaw(context, request, cq));
    }
    // 发送短信验证码
    virtual ::grpc::Status SendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::user::WebResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::WebResponse>> AsyncSendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::WebResponse>>(AsyncSendSMSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::WebResponse>> PrepareAsyncSendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::WebResponse>>(PrepareAsyncSendSMSRaw(context, request, cq));
    }
    // 手机验证码登录
    virtual ::grpc::Status MobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::user::MobileLoginResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::MobileLoginResponse>> AsyncMobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::MobileLoginResponse>>(AsyncMobileLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::MobileLoginResponse>> PrepareAsyncMobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::MobileLoginResponse>>(PrepareAsyncMobileLoginRaw(context, request, cq));
    }
    // 验证 token
    virtual ::grpc::Status ValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::user::ValidateTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ValidateTokenResponse>> AsyncValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ValidateTokenResponse>>(AsyncValidateTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ValidateTokenResponse>> PrepareAsyncValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ValidateTokenResponse>>(PrepareAsyncValidateTokenRaw(context, request, cq));
    }
    // 创建并返回登录 token
    virtual ::grpc::Status CreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::user::CreateLoginTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateLoginTokenResponse>> AsyncCreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateLoginTokenResponse>>(AsyncCreateLoginTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateLoginTokenResponse>> PrepareAsyncCreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateLoginTokenResponse>>(PrepareAsyncCreateLoginTokenRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // 查询用户信息
      virtual void QueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest* request, ::user::QueryUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest* request, ::user::QueryUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 发送短信验证码
      virtual void SendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest* request, ::user::WebResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest* request, ::user::WebResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 手机验证码登录
      virtual void MobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest* request, ::user::MobileLoginResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest* request, ::user::MobileLoginResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 验证 token
      virtual void ValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest* request, ::user::ValidateTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest* request, ::user::ValidateTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 创建并返回登录 token
      virtual void CreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest* request, ::user::CreateLoginTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest* request, ::user::CreateLoginTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::QueryUserResponse>* AsyncQueryUserRaw(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::QueryUserResponse>* PrepareAsyncQueryUserRaw(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::WebResponse>* AsyncSendSMSRaw(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::WebResponse>* PrepareAsyncSendSMSRaw(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::MobileLoginResponse>* AsyncMobileLoginRaw(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::MobileLoginResponse>* PrepareAsyncMobileLoginRaw(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::ValidateTokenResponse>* AsyncValidateTokenRaw(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::ValidateTokenResponse>* PrepareAsyncValidateTokenRaw(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateLoginTokenResponse>* AsyncCreateLoginTokenRaw(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateLoginTokenResponse>* PrepareAsyncCreateLoginTokenRaw(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status QueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::user::QueryUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::QueryUserResponse>> AsyncQueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::QueryUserResponse>>(AsyncQueryUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::QueryUserResponse>> PrepareAsyncQueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::QueryUserResponse>>(PrepareAsyncQueryUserRaw(context, request, cq));
    }
    ::grpc::Status SendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::user::WebResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::WebResponse>> AsyncSendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::WebResponse>>(AsyncSendSMSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::WebResponse>> PrepareAsyncSendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::WebResponse>>(PrepareAsyncSendSMSRaw(context, request, cq));
    }
    ::grpc::Status MobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::user::MobileLoginResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::MobileLoginResponse>> AsyncMobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::MobileLoginResponse>>(AsyncMobileLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::MobileLoginResponse>> PrepareAsyncMobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::MobileLoginResponse>>(PrepareAsyncMobileLoginRaw(context, request, cq));
    }
    ::grpc::Status ValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::user::ValidateTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ValidateTokenResponse>> AsyncValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ValidateTokenResponse>>(AsyncValidateTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ValidateTokenResponse>> PrepareAsyncValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ValidateTokenResponse>>(PrepareAsyncValidateTokenRaw(context, request, cq));
    }
    ::grpc::Status CreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::user::CreateLoginTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::CreateLoginTokenResponse>> AsyncCreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::CreateLoginTokenResponse>>(AsyncCreateLoginTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::CreateLoginTokenResponse>> PrepareAsyncCreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::CreateLoginTokenResponse>>(PrepareAsyncCreateLoginTokenRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void QueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest* request, ::user::QueryUserResponse* response, std::function<void(::grpc::Status)>) override;
      void QueryUser(::grpc::ClientContext* context, const ::user::QueryUserRequest* request, ::user::QueryUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest* request, ::user::WebResponse* response, std::function<void(::grpc::Status)>) override;
      void SendSMS(::grpc::ClientContext* context, const ::user::SendSMSRequest* request, ::user::WebResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest* request, ::user::MobileLoginResponse* response, std::function<void(::grpc::Status)>) override;
      void MobileLogin(::grpc::ClientContext* context, const ::user::MobileLoginRequest* request, ::user::MobileLoginResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest* request, ::user::ValidateTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void ValidateToken(::grpc::ClientContext* context, const ::user::ValidateTokenRequest* request, ::user::ValidateTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest* request, ::user::CreateLoginTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateLoginToken(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest* request, ::user::CreateLoginTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::user::QueryUserResponse>* AsyncQueryUserRaw(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::QueryUserResponse>* PrepareAsyncQueryUserRaw(::grpc::ClientContext* context, const ::user::QueryUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::WebResponse>* AsyncSendSMSRaw(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::WebResponse>* PrepareAsyncSendSMSRaw(::grpc::ClientContext* context, const ::user::SendSMSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::MobileLoginResponse>* AsyncMobileLoginRaw(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::MobileLoginResponse>* PrepareAsyncMobileLoginRaw(::grpc::ClientContext* context, const ::user::MobileLoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::ValidateTokenResponse>* AsyncValidateTokenRaw(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::ValidateTokenResponse>* PrepareAsyncValidateTokenRaw(::grpc::ClientContext* context, const ::user::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::CreateLoginTokenResponse>* AsyncCreateLoginTokenRaw(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::CreateLoginTokenResponse>* PrepareAsyncCreateLoginTokenRaw(::grpc::ClientContext* context, const ::user::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_QueryUser_;
    const ::grpc::internal::RpcMethod rpcmethod_SendSMS_;
    const ::grpc::internal::RpcMethod rpcmethod_MobileLogin_;
    const ::grpc::internal::RpcMethod rpcmethod_ValidateToken_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateLoginToken_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 查询用户信息
    virtual ::grpc::Status QueryUser(::grpc::ServerContext* context, const ::user::QueryUserRequest* request, ::user::QueryUserResponse* response);
    // 发送短信验证码
    virtual ::grpc::Status SendSMS(::grpc::ServerContext* context, const ::user::SendSMSRequest* request, ::user::WebResponse* response);
    // 手机验证码登录
    virtual ::grpc::Status MobileLogin(::grpc::ServerContext* context, const ::user::MobileLoginRequest* request, ::user::MobileLoginResponse* response);
    // 验证 token
    virtual ::grpc::Status ValidateToken(::grpc::ServerContext* context, const ::user::ValidateTokenRequest* request, ::user::ValidateTokenResponse* response);
    // 创建并返回登录 token
    virtual ::grpc::Status CreateLoginToken(::grpc::ServerContext* context, const ::user::CreateLoginTokenRequest* request, ::user::CreateLoginTokenResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryUser() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_QueryUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryUser(::grpc::ServerContext* /*context*/, const ::user::QueryUserRequest* /*request*/, ::user::QueryUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryUser(::grpc::ServerContext* context, ::user::QueryUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::user::QueryUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendSMS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendSMS() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SendSMS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSMS(::grpc::ServerContext* /*context*/, const ::user::SendSMSRequest* /*request*/, ::user::WebResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSMS(::grpc::ServerContext* context, ::user::SendSMSRequest* request, ::grpc::ServerAsyncResponseWriter< ::user::WebResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MobileLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MobileLogin() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_MobileLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MobileLogin(::grpc::ServerContext* /*context*/, const ::user::MobileLoginRequest* /*request*/, ::user::MobileLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMobileLogin(::grpc::ServerContext* context, ::user::MobileLoginRequest* request, ::grpc::ServerAsyncResponseWriter< ::user::MobileLoginResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ValidateToken() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::user::ValidateTokenRequest* /*request*/, ::user::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateToken(::grpc::ServerContext* context, ::user::ValidateTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::user::ValidateTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::user::CreateLoginTokenRequest* /*request*/, ::user::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateLoginToken(::grpc::ServerContext* context, ::user::CreateLoginTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::user::CreateLoginTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_QueryUser<WithAsyncMethod_SendSMS<WithAsyncMethod_MobileLogin<WithAsyncMethod_ValidateToken<WithAsyncMethod_CreateLoginToken<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_QueryUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_QueryUser() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::user::QueryUserRequest, ::user::QueryUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::user::QueryUserRequest* request, ::user::QueryUserResponse* response) { return this->QueryUser(context, request, response); }));}
    void SetMessageAllocatorFor_QueryUser(
        ::grpc::MessageAllocator< ::user::QueryUserRequest, ::user::QueryUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::user::QueryUserRequest, ::user::QueryUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_QueryUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryUser(::grpc::ServerContext* /*context*/, const ::user::QueryUserRequest* /*request*/, ::user::QueryUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryUser(
      ::grpc::CallbackServerContext* /*context*/, const ::user::QueryUserRequest* /*request*/, ::user::QueryUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendSMS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendSMS() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::user::SendSMSRequest, ::user::WebResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::user::SendSMSRequest* request, ::user::WebResponse* response) { return this->SendSMS(context, request, response); }));}
    void SetMessageAllocatorFor_SendSMS(
        ::grpc::MessageAllocator< ::user::SendSMSRequest, ::user::WebResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::user::SendSMSRequest, ::user::WebResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendSMS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSMS(::grpc::ServerContext* /*context*/, const ::user::SendSMSRequest* /*request*/, ::user::WebResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSMS(
      ::grpc::CallbackServerContext* /*context*/, const ::user::SendSMSRequest* /*request*/, ::user::WebResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MobileLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MobileLogin() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::user::MobileLoginRequest, ::user::MobileLoginResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::user::MobileLoginRequest* request, ::user::MobileLoginResponse* response) { return this->MobileLogin(context, request, response); }));}
    void SetMessageAllocatorFor_MobileLogin(
        ::grpc::MessageAllocator< ::user::MobileLoginRequest, ::user::MobileLoginResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::user::MobileLoginRequest, ::user::MobileLoginResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MobileLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MobileLogin(::grpc::ServerContext* /*context*/, const ::user::MobileLoginRequest* /*request*/, ::user::MobileLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MobileLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::user::MobileLoginRequest* /*request*/, ::user::MobileLoginResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ValidateToken() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::user::ValidateTokenRequest, ::user::ValidateTokenResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::user::ValidateTokenRequest* request, ::user::ValidateTokenResponse* response) { return this->ValidateToken(context, request, response); }));}
    void SetMessageAllocatorFor_ValidateToken(
        ::grpc::MessageAllocator< ::user::ValidateTokenRequest, ::user::ValidateTokenResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::user::ValidateTokenRequest, ::user::ValidateTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::user::ValidateTokenRequest* /*request*/, ::user::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateToken(
      ::grpc::CallbackServerContext* /*context*/, const ::user::ValidateTokenRequest* /*request*/, ::user::ValidateTokenResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::user::CreateLoginTokenRequest, ::user::CreateLoginTokenResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::user::CreateLoginTokenRequest* request, ::user::CreateLoginTokenResponse* response) { return this->CreateLoginToken(context, request, response); }));}
    void SetMessageAllocatorFor_CreateLoginToken(
        ::grpc::MessageAllocator< ::user::CreateLoginTokenRequest, ::user::CreateLoginTokenResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::user::CreateLoginTokenRequest, ::user::CreateLoginTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::user::CreateLoginTokenRequest* /*request*/, ::user::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateLoginToken(
      ::grpc::CallbackServerContext* /*context*/, const ::user::CreateLoginTokenRequest* /*request*/, ::user::CreateLoginTokenResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_QueryUser<WithCallbackMethod_SendSMS<WithCallbackMethod_MobileLogin<WithCallbackMethod_ValidateToken<WithCallbackMethod_CreateLoginToken<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_QueryUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryUser() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_QueryUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryUser(::grpc::ServerContext* /*context*/, const ::user::QueryUserRequest* /*request*/, ::user::QueryUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendSMS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendSMS() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SendSMS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSMS(::grpc::ServerContext* /*context*/, const ::user::SendSMSRequest* /*request*/, ::user::WebResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MobileLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MobileLogin() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_MobileLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MobileLogin(::grpc::ServerContext* /*context*/, const ::user::MobileLoginRequest* /*request*/, ::user::MobileLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ValidateToken() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::user::ValidateTokenRequest* /*request*/, ::user::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::user::CreateLoginTokenRequest* /*request*/, ::user::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryUser() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_QueryUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryUser(::grpc::ServerContext* /*context*/, const ::user::QueryUserRequest* /*request*/, ::user::QueryUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendSMS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendSMS() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SendSMS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSMS(::grpc::ServerContext* /*context*/, const ::user::SendSMSRequest* /*request*/, ::user::WebResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendSMS(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MobileLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MobileLogin() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_MobileLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MobileLogin(::grpc::ServerContext* /*context*/, const ::user::MobileLoginRequest* /*request*/, ::user::MobileLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMobileLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ValidateToken() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::user::ValidateTokenRequest* /*request*/, ::user::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::user::CreateLoginTokenRequest* /*request*/, ::user::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateLoginToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_QueryUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_QueryUser() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_QueryUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryUser(::grpc::ServerContext* /*context*/, const ::user::QueryUserRequest* /*request*/, ::user::QueryUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendSMS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendSMS() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendSMS(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendSMS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendSMS(::grpc::ServerContext* /*context*/, const ::user::SendSMSRequest* /*request*/, ::user::WebResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendSMS(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MobileLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MobileLogin() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MobileLogin(context, request, response); }));
    }
    ~WithRawCallbackMethod_MobileLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MobileLogin(::grpc::ServerContext* /*context*/, const ::user::MobileLoginRequest* /*request*/, ::user::MobileLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MobileLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ValidateToken() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ValidateToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::user::ValidateTokenRequest* /*request*/, ::user::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateLoginToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::user::CreateLoginTokenRequest* /*request*/, ::user::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateLoginToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryUser() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::user::QueryUserRequest, ::user::QueryUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::user::QueryUserRequest, ::user::QueryUserResponse>* streamer) {
                       return this->StreamedQueryUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryUser(::grpc::ServerContext* /*context*/, const ::user::QueryUserRequest* /*request*/, ::user::QueryUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::user::QueryUserRequest,::user::QueryUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendSMS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendSMS() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::user::SendSMSRequest, ::user::WebResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::user::SendSMSRequest, ::user::WebResponse>* streamer) {
                       return this->StreamedSendSMS(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendSMS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendSMS(::grpc::ServerContext* /*context*/, const ::user::SendSMSRequest* /*request*/, ::user::WebResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendSMS(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::user::SendSMSRequest,::user::WebResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MobileLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MobileLogin() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::user::MobileLoginRequest, ::user::MobileLoginResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::user::MobileLoginRequest, ::user::MobileLoginResponse>* streamer) {
                       return this->StreamedMobileLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MobileLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MobileLogin(::grpc::ServerContext* /*context*/, const ::user::MobileLoginRequest* /*request*/, ::user::MobileLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMobileLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::user::MobileLoginRequest,::user::MobileLoginResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ValidateToken() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::user::ValidateTokenRequest, ::user::ValidateTokenResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::user::ValidateTokenRequest, ::user::ValidateTokenResponse>* streamer) {
                       return this->StreamedValidateToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::user::ValidateTokenRequest* /*request*/, ::user::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedValidateToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::user::ValidateTokenRequest,::user::ValidateTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::user::CreateLoginTokenRequest, ::user::CreateLoginTokenResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::user::CreateLoginTokenRequest, ::user::CreateLoginTokenResponse>* streamer) {
                       return this->StreamedCreateLoginToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::user::CreateLoginTokenRequest* /*request*/, ::user::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateLoginToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::user::CreateLoginTokenRequest,::user::CreateLoginTokenResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_QueryUser<WithStreamedUnaryMethod_SendSMS<WithStreamedUnaryMethod_MobileLogin<WithStreamedUnaryMethod_ValidateToken<WithStreamedUnaryMethod_CreateLoginToken<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_QueryUser<WithStreamedUnaryMethod_SendSMS<WithStreamedUnaryMethod_MobileLogin<WithStreamedUnaryMethod_ValidateToken<WithStreamedUnaryMethod_CreateLoginToken<Service > > > > > StreamedService;
};

}  // namespace user


#endif  // GRPC_user_2eproto__INCLUDED
